generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model letra {
  id                 Int            @id @default(autoincrement())
  estilo_id          Int
  verses             String[]
  rhyme_scheme       Int[]
  repetition_pattern Int[]
  structure          String         @db.VarChar(255)
  created_at         DateTime?      @db.Timestamp(6)
  updated_at         DateTime?      @db.Timestamp(6)
  estilo             estilo         @relation(fields: [estilo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  letra_artist       letra_artist[]

  @@index([estilo_id], map: "idx_letra_estilo_id")
}

model letra_artist {
  id            Int       @id @default(autoincrement())
  letra_id      Int
  artist_id     Int
  recording_url String?   @db.VarChar(255)
  album         String?   @db.VarChar(255)
  year          Int?
  created_at    DateTime? @db.Timestamp(6)
  updated_at    DateTime? @db.Timestamp(6)
  artist        artist    @relation(fields: [artist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  letra         letra     @relation(fields: [letra_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([letra_id, artist_id], map: "unique_letra_artist")
  @@index([artist_id], map: "idx_letra_artist_artist_id")
  @@index([letra_id], map: "idx_letra_artist_letra_id")
}

model palo {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  origin      String        @db.VarChar(255)
  origin_date DateTime      @db.Timestamp(6)
  created_at  DateTime?     @db.Timestamp(6)
  updated_at  DateTime?     @db.Timestamp(6)
  palo_compas palo_compas[]
  palo_estilo palo_estilo[]

  @@index([name], map: "unique_palo_name")
}

model palo_compas {
  id         Int       @id @default(autoincrement())
  palo_id    Int
  compas_id  Int
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  compas     compas    @relation(fields: [compas_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  palo       palo      @relation(fields: [palo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([palo_id, compas_id], map: "unique_palo_compas")
  @@index([compas_id], map: "idx_palo_compas_compas_id")
  @@index([palo_id], map: "idx_palo_compas_palo_id")
}

model palo_estilo {
  id         Int       @id @default(autoincrement())
  palo_id    Int
  estilo_id  Int
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)
  estilo     estilo    @relation(fields: [estilo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  palo       palo      @relation(fields: [palo_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([palo_id, estilo_id], map: "unique_palo_estilo")
  @@index([estilo_id], map: "idx_palo_estilo_estilo_id")
  @@index([palo_id], map: "idx_palo_estilo_palo_id")
}

model user {
  id         Int       @id @default(autoincrement())
  email      String    @unique @db.VarChar(255)
  password   String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(6)
  updated_at DateTime? @db.Timestamp(6)

  @@index([email], map: "unique_user_email")
}

model compas {
  id              Int           @id @default(autoincrement())
  name            String        @unique @db.VarChar(255)
  beats           Int
  accents         Int[]
  silences        Int[]
  time_signatures String[]
  bpm             Int
  created_at      DateTime?     @db.Timestamp(6)
  updated_at      DateTime?     @db.Timestamp(6)
  palo_compas     palo_compas[]

  @@index([name], map: "unique_compas_name")
}

model artist {
  id           Int            @id @default(autoincrement())
  name         String         @unique @db.VarChar(255)
  birth_year   Int?
  death_year   Int?
  origin       String?        @db.VarChar(255)
  type         artisttype
  created_at   DateTime?      @db.Timestamp(6)
  updated_at   DateTime?      @db.Timestamp(6)
  letra_artist letra_artist[]

  @@index([name], map: "unique_artist_name")
}

model estilo {
  id          Int           @id @default(autoincrement())
  name        String        @unique @db.VarChar(255)
  tonality    tonalities
  key         keys
  origin      String        @db.VarChar(255)
  origin_date DateTime      @db.Timestamp(6)
  created_at  DateTime?     @db.Timestamp(6)
  updated_at  DateTime?     @db.Timestamp(6)
  letra       letra[]
  palo_estilo palo_estilo[]

  @@index([name], map: "unique_estilo_name")
}

enum artisttype {
  CANTE
  GUITARRA
  BAILE
}

enum keys {
  A
  Bb
  B
  C
  Db
  D
  Eb
  E
  F
  Gb
  G
  Ab
}

enum tonalities {
  PHRYGIUS
  DORIANUS
  AEOLIUS
  MAIOR
  MINOR
  LOCRIUS
  HARMONICUS_MINOR
  MELODICUS_MINOR
}
